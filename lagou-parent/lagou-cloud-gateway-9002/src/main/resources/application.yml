
#为了系统的高可用  gateway网关应该是个集群  利用nginx(nginx集群) 做网关的负载均衡

server:
  port: 9002
eureka:
  client:
   serviceUrl: # eureka server的路径
    defaultZone: http://lagoucloudeurekaservera:8761/eureka/,http://lagoucloudeurekaserverb:8762/eureka/
     #把 eureka 集群中的所有 url 都填写了进来，也可以只写⼀台，因为各个eureka server 可以同步注册表
  instance:
  #使⽤ip注册，否则会使⽤主机名注册了（此处考虑到对⽼版本的兼容，新版本经过实验都是ip）
   prefer-ip-address: true
  #⾃定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress
   instance-id: ${spring.cloud.client.ipaddress}:${spring.application.name}:${server.port}:@project.version@
spring:
  application:
   name: lagou-cloud-gateway
  cloud:
   gateway:
    routes: # 路由可以有多个
    - id: service-autodeliver-router # 我们⾃定义的路由 ID，保持唯⼀
      # 静态路由uri: http://127.0.0.1:8096 # ⽬标服务地址 ⾃动投递微服务（部署多实例） 动态路由：uri配置的应该是⼀个服务名称，
      #⽽不应该是⼀个具体的服务实例的地址
      #动态路由
      uri: lb://lagou-service-autodeliver
      # gateway⽹关从服务注册中⼼获取实例信息然后负载后路由
      predicates: # 断⾔：路由条件，Predicate 接受⼀个输⼊参数，返回⼀个布尔值结果。该接⼝包含多种默 认⽅法来将
      #Predicate 组合成其他复杂的逻辑（⽐如：与，或，⾮）。
       - Path= /autodeliver/**
    - id: service-resume-router # 我们⾃定义的路由 ID，保持唯⼀
       #uri: http://127.0.0.1:8081 # ⽬标服务地址 静态路由
      uri: lb://lagou-service-resume # ⽬标服务地址
        #http://localhost:9002/resume/openstate/1545132
        #http://127.0.0.1:8081/openstate/1545132
      predicates: # 断⾔：路由条件，Predicate 接受⼀个输⼊参数，返回⼀个布尔值结果。该接⼝包含多种默 认⽅法来将
       #Predicate 组合成其他复杂的逻辑（⽐如：与，或，⾮）。
        - Path=/resume/**
      filters:
        - StripPrefix=1 #Global优先于  StripPrefix filter 因为 实现了Ordered  getOrder  返回的是0  数字越小优先级越大
  #zipkin client 配置
  zipkin:
    # zipkin server的请求地址
    base-url: http://127.0.0.1:9411
    # web 客户端将踪迹⽇志数据通过⽹络请求的⽅式传送到服务端，另外还有配置
    # kafka/rabbit 客户端将踪迹⽇志数据传递到mq进⾏中转
    sender:
      type: web
  sleuth:
    sampler:
    # 采样率 1 代表100%全部采集 ，默认0.1 代表10% 的请求踪迹数据会被采集
    # ⽣产环境下，请求量⾮常⼤，没有必要所有请求的踪迹数据都采集分析，对于⽹络包括
    #server端压⼒都是⽐较⼤的，可以配置采样率采集⼀定⽐例的请求的踪迹数据进⾏分析即可
     probability: 1

#分布式链路追踪
logging:
  level:
   org.springframework.web.servlet.DispatcherServlet: debug
   org.springframework.cloud.sleuth: debug

#zipkin client 配置